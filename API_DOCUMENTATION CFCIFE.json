{
  "openapi": "3.0.0",
  "info": {
    "title": "JobConnect API",
    "description": "API for JobConnect job portal",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.jobconnect.com/v1",
      "description": "Main (production) server"
    },
    {
      "url": "https://staging-api.jobconnect.com",
      "description": "Internal staging server for testing"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Not found"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Invalid token. Unauthorized"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Invalid input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Bad request"
                },
                "message": {
                  "type": "string",
                  "example": "Wrong ID"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Validation error"
                },
                "errors": {
                  "type": "string",
                  "example": "required properties missing"
                }
              }
            }
          }
        }
      },
      "Conflict": {
        "description": "User already exists",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "User already exists"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "Olivia"
          },
          "lastName": {
            "type": "string",
            "example": "Pope"
          },
          "email": {
            "type": "string",
            "example": "olivia.pope@example.com"
          },
          "password": {
            "type": "string",
            "example": "hashedpassword"
          }
        },
        "required": ["firstName", "lastName", "email", "password"]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "Olivia"
          },
          "lastName": {
            "type": "string",
            "example": "Pope"
          },
          "email": {
            "type": "string",
            "example": "olivia.pope@example.com"
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "string",
            "example": "12345"
          },
          "title": {
            "type": "string",
            "example": "Software Developer"
          },
          "description": {
            "type": "string",
            "example": "Responsible for developing software solutions."
          },
          "company": {
            "type": "string",
            "example": "Tech Corp"
          },
          "location": {
            "type": "string",
            "example": "New York, NY"
          },
          "work_style": {
            "type": "string",
            "enum": ["Remote", "Hybrid", "Onsite"]
          },
          "min_salary": {
            "type": "number",
            "format": "double",
            "example": 100000
          },
          "max_salary": {
            "type": "integer",
            "example": "300000"
          }
        },
        "required": ["title", "description", "company", "location", "salary"]
      },
      "Unprotected_Job_Response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e349-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "example": "Software Developer"
          },
          "description": {
            "type": "string",
            "example": "Responsible for developing software solutions."
          },
          "company": {
            "type": "string",
            "example": "Tech Corp"
          },
          "location": {
            "type": "string",
            "example": "New York, NY"
          }
        }
      },
      "Employer": {
        "type": "object",
        "properties": {
          "employer_id": {
            "type": "string",
            "example": "67890e5-12d3-a456-426614174000"
          },
          "company_name": {
            "type": "string",
            "example": "Tech Corp"
          },
          "point_of_contact": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "address": {
                "type": "string",
                "example": "123 Tech Street, New York, NY"
              },
              "contactNumber": {
                "type": "string",
                "example": "555-1234"
              },
              "email": {
                "type": "string",
                "example": "contact@techcorp.com"
              }
            }
          }
        }
      },
      "New_Employer_RequestBody": {
        "type": "object",
        "properties": {
          "employer_id": {
            "type": "string",
            "example": "67890e5-12d3-a456-426614174000"
          },
          "company_name": {
            "type": "string",
            "example": "Tech Corp"
          },
          "point_of_contact": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "John Doe"
              },
              "address": {
                "type": "string",
                "example": "123 Tech Street, New York, NY"
              },
              "contactNumber": {
                "type": "string",
                "example": "555-1234"
              },
              "email": {
                "type": "string",
                "example": "john@example.com"
              }
            }
          }
        }
      },
      "JobList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "job_id": {
              "type": "string",
              "example": "12345d-12345-12345-12345"
            },
            "job_title": {
              "type": "string",
              "example": "Software Developer"
            },
            "date_posted": {
              "type": "string",
              "example": "2021-01-01"
            },
            "employer_id": {
              "type": "string",
              "example": "12e324-12345-12345-12345"
            },
            "description": {
              "type": "string",
              "description": "Job description"
            }
          }
        }
      },
      "Candidate": {
        "type": "object",
        "properties": {
          "candidate_id": {
            "type": "string",
            "example": "123et4-12345-12345-12345"
          },
          "first_name": {
            "type": "string",
            "example": "Doe"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "profile_picture": {
            "type": "string",
            "example": "https://example.com/john-doe.jpg"
          },
          "resume": {
            "type": "string",
            "example": "https://example.com/john-doe-resume.pdf"
          }
        },
        "required": ["email", "resume"]
      },
      "InvalidStatusError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Invalid status value"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 401
          },
          "message": {
            "type": "string",
            "example": "Unauthorized access"
          }
        }
      },
      "JobNotFoundError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "No jobs found matching the provided criteria"
          }
        }
      },
      "JobIdError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Invalid job ID"
          }
        }
      },
      "CandidateSearchError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Invalid search criteria"
          }
        }
      },
      "CandidateNotFoundError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "example": 404
          },
          "message": {
            "type": "string",
            "example": "No candidates found matching the provided criteria"
          }
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login an existing user",
        "description": "Authenticate an existing user",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6Ik9saXZpYSBQb3BlIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "summary": "Get the current user's profile",
        "description": "Retrieve the current user's profile information",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "summary": "Update the current user's profile",
        "description": "Update the current user's profile information",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User profile updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete the current user's profile",
        "description": "Delete the current user's profile",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User profile deleted successfully"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Logout the current user",
        "description": "Logout the current user",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully"
          }
        }
      }
    },
    "/api/candidates": {
      "get": {
        "summary": "Get a list of all candidates",
        "description": "Retrieve a list of all candidates",
        "tags": ["Candidates"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of candidates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidates retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Candidate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a new candidate",
        "description": "Register a new candidate",
        "tags": ["Candidates"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Candidate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Candidates updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Candidates updated successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Candidate"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/candidates/{candidateId}": {
      "get": {
        "summary": "Get a candidate by ID",
        "description": "Retrieve a candidate by their ID",
        "tags": ["Candidates"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "description": "The ID of the candidate to return",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified candidate ID is invalid (not a number)"
          },
          "404": {
            "description": "A candidate with the specified ID was not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "summary": "Update a candidate",
        "description": "Update a candidate's information",
        "tags": ["Candidates"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "description": "The ID of the candidate to update",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Candidate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Candidate updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The specified candidate ID is invalid (not a number)"
          },
          "404": {
            "description": "A candidate with the specified ID was not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "summary": "Delete a candidate",
        "description": "Delete a candidate by their ID",
        "tags": ["Candidates"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "description": "The ID of the candidate to delete",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Candidate deleted successfully"
          },
          "400": {
            "description": "The specified candidate ID is invalid (not a number)"
          },
          "404": {
            "description": "A candidate with the specified ID was not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/api/jobs": {
      "get": {
        "summary": "Get a list of all jobs",
        "operationId": "getJobs",
        "tags": ["Jobs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/components/schemas/Job"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a new job",
        "operationId": "createJob",
        "tags": ["Jobs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Job object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Job created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/api/jobs/{jobId}": {
      "get": {
        "summary": "Get a job by ID",
        "operationId": "getJobById",
        "tags": ["Jobs"],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "ID of the job to retrieve",
            "schema": {
              "type": "string",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unprotected_Job_Response"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a job",
        "operationId": "updateJob",
        "tags": ["Jobs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "ID of the job to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Job object with updated information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Job updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Job updated successfully."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete a job",
        "operationId": "deleteJob",
        "tags": ["Jobs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "description": "ID of the job to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Job deleted successfully."
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/employers": {
      "get": {
        "summary": "Get a list of all employers",
        "operationId": "getEmployers",
        "tags": ["Employers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of employers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a new employer",
        "operationId": "createEmployer",
        "tags": ["Employers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Employer object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/New_Employer_RequestBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employer created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Employer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/employers/{employerId}": {
      "get": {
        "summary": "Get an employer by ID",
        "operationId": "getEmployerById",
        "tags": ["Employers"],
        "parameters": [
          {
            "name": "employerId",
            "in": "path",
            "required": true,
            "description": "ID of the employer to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employer updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Employer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employer not found."
          }
        }
      },
      "put": {
        "summary": "Update an employer",
        "operationId": "updateEmployer",
        "tags": ["Employers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "employerId",
            "in": "path",
            "required": true,
            "description": "ID of the employer to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Employer object with updated information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employer"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Employer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employer updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Employer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete an employer",
        "operationId": "deleteEmployer",
        "tags": ["Employers"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "employerId",
            "in": "path",
            "required": true,
            "description": "ID of the employer to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employer deleted successfully."
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/search/jobs": {
      "get": {
        "tags": ["Search"],
        "summary": "Search for jobs based on various criteria",
        "description": "Multiple status values can be provided with comma-separated strings",
        "operationId": "searchJobs",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values to filter jobs by",
            "required": false,
            "schema": {
              "type": "string",
              "default": "available",
              "enum": ["available", "pending", "filled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Job"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidStatusError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "No jobs found matching the provided criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobNotFoundError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/search/jobs/{jobId}": {
      "get": {
        "tags": ["Search"],
        "summary": "Retrieve a specific job by ID",
        "description": "Retrieve job details by job ID",
        "operationId": "getJobById",
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "ID of the job to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Invalid job ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobIdError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobNotFoundError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/search/candidates": {
      "get": {
        "tags": ["Search"],
        "summary": "Search for candidates based on various criteria",
        "description": "Search for candidates using various criteria",
        "operationId": "searchCandidates",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "First name of the candidate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Last name of the candidate",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the candidate",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Candidate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateSearchError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          },
          "404": {
            "description": "No candidates found matching the provided criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CandidateNotFoundError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/search/recently-posted-jobs": {
      "get": {
        "summary": "Retrieve a list of recently posted jobs",
        "description": "Retrieve a list of recently posted jobs",
        "tags": ["Search"],
        "responses": {
          "200": {
            "description": "List of jobs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/JobList"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/search/candidates/{candidateId}": {
      "get": {
        "summary": "Retrieve a specific candidate by ID",
        "description": "Retrieve a specific candidate by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Search"],
        "parameters": [
          {
            "name": "candidateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Candidate retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  }
}
